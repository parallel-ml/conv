+++++++++++++++++++++++++++++++++++++++++++++++++++++++
running network:  resnet
load model: 529.26s
inference: 3.99s
Filename: keras_quick_start.py

Line #    Mem usage    Increment   Line Contents
================================================
    61    135.9 MiB      0.0 MiB   @profile
    62                             def run_network(ntype):
    63    135.9 MiB      0.0 MiB       log(ntype)
    64    135.9 MiB      0.0 MiB       timestamp()
    65                                 # keras provides API for directly geting a 50-layer res-net model with imagenet weight
    66    306.2 MiB    170.3 MiB       with Network(ntype) as NN:
    67    306.2 MiB      0.0 MiB           timestamp('load model')
    68                                     # the input passed into keras forwarding function is expected to be 4D
    69                                     # the image is 3D and the input is a list of different images
    70    306.2 MiB      0.0 MiB           test_x = np.array([resized_image])
    71                                     # output probability of being in each of 1000 classes
    72    306.2 MiB      0.0 MiB           timestamp()
    73    310.9 MiB      4.6 MiB           NN.predict(test_x)
    74    209.8 MiB   -101.0 MiB           timestamp('inference')


+++++++++++++++++++++++++++++++++++++++++++++++++++++++
running network:  mobilenet
load model: 299.98s
inference: 1.84s
Filename: keras_quick_start.py

Line #    Mem usage    Increment   Line Contents
================================================
    61    135.7 MiB      0.0 MiB   @profile
    62                             def run_network(ntype):
    63    135.7 MiB      0.0 MiB       log(ntype)
    64    135.7 MiB      0.0 MiB       timestamp()
    65                                 # keras provides API for directly geting a 50-layer res-net model with imagenet weight
    66    188.1 MiB     52.4 MiB       with Network(ntype) as NN:
    67    188.1 MiB      0.0 MiB           timestamp('load model')
    68                                     # the input passed into keras forwarding function is expected to be 4D
    69                                     # the image is 3D and the input is a list of different images
    70    188.1 MiB      0.0 MiB           test_x = np.array([resized_image])
    71                                     # output probability of being in each of 1000 classes
    72    188.1 MiB      0.0 MiB           timestamp()
    73    193.8 MiB      5.8 MiB           NN.predict(test_x)
    74    174.2 MiB    -19.6 MiB           timestamp('inference')


