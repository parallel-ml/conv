+++++++++++++++++++++optical flow++++++++++++++++++++++++++++
optical_flow 0.823s
Filename: keras_quick_start.py

Line #    Mem usage    Increment   Line Contents
================================================
     7    113.7 MiB      0.0 MiB   @profile
     8                             def main():
     9    303.1 MiB    189.4 MiB       model = load_model('/home/pi/weights/batch_4_noaug/199_epoch-0.2510_loss-0.9403_acc-6.5269_val_loss-0.3061_val_acc.hdf5')
    10                             
    11    303.1 MiB      0.0 MiB       test_x = np.random.rand(12, 16, 20)
    12                             
    13                                 # pop the last three layers from training 
    14    303.1 MiB      0.0 MiB       for _ in range(3):
    15    303.1 MiB      0.0 MiB           model.pop()
    16                             
    17    303.1 MiB      0.0 MiB       start = time.time()
    18    306.7 MiB      3.6 MiB       model.predict(np.array([test_x]))
    19    306.7 MiB      0.0 MiB       print 'optical_flow {:.3f}s'.format(time.time() - start)


+++++++++++++++++++++image++++++++++++++++++++++++++++
image 0.823s
Filename: keras_quick_start.py

Line #    Mem usage    Increment   Line Contents
================================================
     7    113.2 MiB      0.0 MiB   @profile
     8                             def main():
     9    303.0 MiB    189.8 MiB       model = load_model('/home/pi/weights/batch_4_aug/199_epoch-5.2804_loss-0.1080_acc-5.9187_val_loss-0.0662_val_acc.hdf5')
    10                             
    11    303.0 MiB      0.0 MiB       test_x = np.random.rand(12, 16, 3)
    12                             
    13                                 # pop the last three layers from training 
    14    303.0 MiB      0.0 MiB       for _ in range(3):
    15    303.0 MiB      0.0 MiB           model.pop()
    16                             
    17    303.0 MiB      0.0 MiB       start = time.time()
    18    307.4 MiB      4.4 MiB       model.predict(np.array([test_x]))
    19    307.4 MiB      0.0 MiB       print 'image {:.3f}s'.format(time.time() - start)


simaese fc layer inference 9.273
Filename: siamese_fc_layer.py

Line #    Mem usage    Increment   Line Contents
================================================
     8    112.6 MiB      0.0 MiB   @profile
     9                             def main():
    10    112.6 MiB      0.0 MiB       model = Sequential()
    11    113.1 MiB      0.5 MiB       model.add(Dense(4096, input_shape=(7680,)))
    12    113.8 MiB      0.7 MiB       model.add(BatchNormalization(input_shape=(4096,)))
    13    113.8 MiB      0.0 MiB       model.add(Activation('relu', input_shape=(4096,)))
    14                                 
    15    113.8 MiB      0.0 MiB       model.add(Dense(4096, input_shape=(4096,)))
    16    114.2 MiB      0.4 MiB       model.add(BatchNormalization(input_shape=(4096,)))
    17    114.2 MiB      0.0 MiB       model.add(Activation('relu', input_shape=(4096,)))
    18                                 
    19    114.5 MiB      0.3 MiB       model.add(Dense(51, input_shape=(4096,)))
    20    115.0 MiB      0.5 MiB       model.add(BatchNormalization(input_shape=(51,)))
    21    115.0 MiB      0.0 MiB       model.add(Activation('softmax', input_shape=(51,)))
    22                                 
    23    115.0 MiB      0.0 MiB       test_x = np.random.rand((7680))
    24                                 
    25    115.0 MiB      0.0 MiB       start = time.time() 
    26    302.5 MiB    187.5 MiB       model.predict(np.array([test_x]))
    27    302.5 MiB      0.0 MiB       print 'simaese fc layer inference {:.3f}'.format(time.time() - start)


