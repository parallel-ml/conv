+++++++++++++++++++++++++++++++++++++++++++++++++++++++
running network:  resnet
load model: 12.71s
inference: 0.48s
Filename: keras_quick_start.py

Line #    Mem usage    Increment   Line Contents
================================================
    61    200.6 MiB      0.0 MiB   @profile
    62                             def run_network(ntype):
    63    200.6 MiB      0.0 MiB       log(ntype)
    64    200.6 MiB      0.0 MiB       timestamp()
    65                                 # keras provides API for directly geting a 50-layer res-net model with imagenet weight
    66    457.6 MiB    257.1 MiB       with Network(ntype) as NN:
    67    457.6 MiB      0.0 MiB           timestamp('load model')
    68                                     # the input passed into keras forwarding function is expected to be 4D
    69                                     # the image is 3D and the input is a list of different images
    70    457.6 MiB      0.0 MiB           test_x = np.array([resized_image])
    71                                     # output probability of being in each of 1000 classes
    72    457.6 MiB      0.0 MiB           timestamp()
    73    466.1 MiB      8.5 MiB           NN.predict(test_x)
    74    360.6 MiB   -105.5 MiB           timestamp('inference')


+++++++++++++++++++++++++++++++++++++++++++++++++++++++
running network:  mobilenet
load model: 6.24s
inference: 0.22s
Filename: keras_quick_start.py

Line #    Mem usage    Increment   Line Contents
================================================
    61    199.8 MiB      0.0 MiB   @profile
    62                             def run_network(ntype):
    63    199.8 MiB      0.0 MiB       log(ntype)
    64    199.8 MiB      0.0 MiB       timestamp()
    65                                 # keras provides API for directly geting a 50-layer res-net model with imagenet weight
    66    289.9 MiB     90.1 MiB       with Network(ntype) as NN:
    67    289.9 MiB      0.0 MiB           timestamp('load model')
    68                                     # the input passed into keras forwarding function is expected to be 4D
    69                                     # the image is 3D and the input is a list of different images
    70    289.9 MiB      0.0 MiB           test_x = np.array([resized_image])
    71                                     # output probability of being in each of 1000 classes
    72    289.9 MiB      0.0 MiB           timestamp()
    73    290.3 MiB      0.5 MiB           NN.predict(test_x)
    74    277.2 MiB    -13.1 MiB           timestamp('inference')


