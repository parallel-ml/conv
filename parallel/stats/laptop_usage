+++++++++++++++++++++++++++++++++++++++++++++++++++++++
running network:  resnet
load model: 14.45s
inference: 1.35s
Filename: keras_quick_start.py

Line #    Mem usage    Increment   Line Contents
================================================
    61    230.8 MiB      0.0 MiB   @profile
    62                             def run_network(ntype):
    63    230.8 MiB      0.0 MiB       log(ntype)
    64    230.8 MiB      0.0 MiB       timestamp()
    65                                 # keras provides API for directly geting a 50-layer res-net model with imagenet weight
    66    740.1 MiB    509.3 MiB       with Network(ntype) as NN:
    67    740.1 MiB      0.0 MiB           timestamp('load model')
    68                                     # the input passed into keras forwarding function is expected to be 4D
    69                                     # the image is 3D and the input is a list of different images
    70    740.1 MiB      0.0 MiB           test_x = np.array([resized_image])
    71                                     # output probability of being in each of 1000 classes
    72    740.1 MiB      0.0 MiB           timestamp()
    73    986.5 MiB    246.4 MiB           NN.predict(test_x)
    74    969.7 MiB    -16.8 MiB           timestamp('inference')


+++++++++++++++++++++++++++++++++++++++++++++++++++++++
running network:  mobilenet
load model: 6.81s
inference: 0.43s
Filename: keras_quick_start.py

Line #    Mem usage    Increment   Line Contents
================================================
    61    228.4 MiB      0.0 MiB   @profile
    62                             def run_network(ntype):
    63    228.4 MiB      0.0 MiB       log(ntype)
    64    228.4 MiB      0.0 MiB       timestamp()
    65                                 # keras provides API for directly geting a 50-layer res-net model with imagenet weight
    66    561.7 MiB    333.3 MiB       with Network(ntype) as NN:
    67    561.7 MiB      0.0 MiB           timestamp('load model')
    68                                     # the input passed into keras forwarding function is expected to be 4D
    69                                     # the image is 3D and the input is a list of different images
    70    561.7 MiB      0.0 MiB           test_x = np.array([resized_image])
    71                                     # output probability of being in each of 1000 classes
    72    561.7 MiB      0.0 MiB           timestamp()
    73    804.9 MiB    243.2 MiB           NN.predict(test_x)
    74    799.7 MiB     -5.2 MiB           timestamp('inference')


